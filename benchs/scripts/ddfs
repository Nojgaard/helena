#!/bin/bash
#OAR -l nodes=8,walltime=10:00:00
#OAR -p ib='QDR'
#OAR -t allow_classic_ssh
#OAR -n dist-helena
#OAR -O ddfs.out
#OAR -E ddfs.err

[ "$1" = "" ] && echo 'error: missing $1 = # of nodes' && exit 1
[ "$2" = "" ] && echo 'error: missing $2 = min # of states' && exit 1
[ "$3" = "" ] && echo 'error: missing $3 = max # of states' && exit 1

MAXW=$1
minStates=$2
maxStates=$3

export PATH=$HOME/helena/bin:$PATH

if [ -z "$OAR_NODEFILE" ]
then
    for N in $(seq 1 $MAXW)
    do
	echo localhost
    done > machinefile
else
    cat $OAR_NODEFILE | sort -u \
	| while read host
    do
	echo "$host max-slots=1"
    done > machinefile
fi

outDir=out/ddfs
mkdir -p $outDir &> /dev/null

reports=$(ls -1 $outDir | wc -l)

scripts/select-models $minStates $maxStates \
    | while read m lang st opt
      do
	  printed=0
	  hashSize=20
	  size=900000
	  while [ $size -lt $st -a $hashSize != 30 ]
	  do
	      hashSize=$((hashSize + 1))
	      size=$((size * 2))
	  done
	  f=$(scripts/get-file $m $lang)
	  [ ! -f $f ] && continue
	  param=$(scripts/format-parameters $opt)
	  for N in $(seq 1 $MAXW)
	  do
	      xml=$outDir/$m
	      if [ "$opt" != "" ]
	      then
		  xml=$xml-$(echo $opt | tr " " "-")
	      fi
	      xml=$xml"_N"$N.xml
	      if [ ! -f $xml ]
	      then
		  cmd="helena --hash-size=$hashSize "$param
		  if [ $N -gt 1 ]
		  then
		      head -$N machinefile > mf
                      cmd=$cmd" --algo=ddfs --machine-file=mf"
		  else
		      cmd=$cmd" --algo=dfs"
		  fi
		  cmd=$cmd" --progress=no-report --report-file="$xml" $f"
		  if [ $printed -eq 0 ]
		  then
		      printed=1
		      echo '***** '$m - $st states' *****'
		  fi
                  echo $cmd
		  eval $cmd # &> /dev/null
	      fi
	  done
      done

if [ $reports != $(ls -1 $outDir | wc -l) ]
then
    scripts/ddfs $MAXW $minStates $maxStates
fi
