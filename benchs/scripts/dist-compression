#!/bin/bash

[ -z "$OAR_NODEFILE" ] && echo "not in an OAR job" && exit 1

#C5="collision.5;16-32;12;25;8"
FT6="firewire_tree.6;20-40;12;24;4"
#FT7="firewire_tree.7;20-40;12;24;8"
#FT7_2="firewire_tree.7;40-80;14;24;8"
LE6="leader_election.6;20-40;16;24;4"
#LE7="leader_election.7;20-40;16;24;8"
#LE7_2="leader_election.7;30-60;21;24;8"
L9="lifts.9;16-32;20;25;8"
#BRP9="brp.8;1-1000;22;25;8"
#S9="synapse.9;12-24;18;25;12"

MODELS="$C5 $FT6 $FT7 $LE6 $LE7 $L9 $BRP9 $S9"

BUFFER_SIZE=64000

NODES=$(seq 64 -4 4)

PROCS=4

REPETITION=2

mf=machinefile-$OAR_JOBID
helena="helena -g=no-report -A=DBFS -N=EXPLORE -mf=$mf"
helena=$helena" -cp='dbfsBufferSize=$BUFFER_SIZE'"
outDir=out/dist-compression

mkdir -p $outDir &> /dev/null

for n in $NODES
do
    sort -u $OAR_NODEFILE | head -$n > $mf
    [ $(cat $mf | wc -l) -lt $n ] && \
        echo "not enough nodes for n=$n" && continue
    for mod in $MODELS
    do
	m=$(echo $mod | cut -d";" -f1)
	compMin=$(echo $mod | cut -d";" -f2 | cut -d"-" -f1)
        compMax=$(echo $mod | cut -d";" -f2 | cut -d"-" -f2)
        cb=$(echo $mod | cut -d";" -f3)
        t=$(echo $mod | cut -d";" -f4)
        nmin=$(echo $mod | cut -d";" -f5)
        [ $nmin -gt $n ] && continue
	dve="../examples/dve/$m.dve"
        baseCmd="$helena -np=$PROCS -t=$t -cb=$cb"
        baseCmd=$baseCmd" -cp='compressionMinCompSize=$compMin'"
        baseCmd=$baseCmd" -cp='compressionMaxCompSize=$compMax'"
	for c in C DC
	do
            dir=$outDir/$m/$compMin-$compMax/$n/$c
            mkdir -p $dir &> /dev/null
	    for i in $(seq -w 1 $REPETITION)
	    do
		xml=$dir/$i.xml
                out=$dir/$i.out
                echo "***** $m, $n nodes, $PROCS procs, m=$c *****"
		cmd="$baseCmd -$c -o=$xml $dve"
		echo $cmd
		eval $cmd | tee $out
                if [ "" != "$(scripts/is-buggy $out 3)" ]
                then
                    rm $xml $out
                fi
            done
       	done
    done
    rm $mf
done

exit 0
