#!/bin/bash
#OAR -l nodes=10,walltime=10:00:00
#OAR -p ib='QDR'
#OAR -t allow_classic_ssh
#OAR -n dist-helena
#OAR -O dbfs.out
#OAR -E dbfs.err

[ "$1" = "" ] && echo 'error: missing $1 = # of nodes' && exit 1
[ "$2" = "" ] && echo 'error: missing $2 = min # of states' && exit 1
[ "$3" = "" ] && echo 'error: missing $3 = max # of states' && exit 1
[ "$4" = "" ] && echo 'error: missing $4 = btl' && exit 1

MAXW=$1
minStates=$2
maxStates=$3
btl=$4

helena=helena

export PATH=$HOME/helena/bin:$PATH

if [ $btl = tcp ]
then
    outDir=out/dbfs-tcp
elif [  $btl = ib ]
then
    outDir=out/dbfs-ib
else
    echo 'error: unkown BTL :'$btl
    exit 1
fi

#  create the machine file
if [ -z "$OAR_NODEFILE" ]
then
    for N in $(seq 1 $MAXW)
    do
	echo localhost
    done > machinefile
else
    cat $OAR_NODEFILE | sort -u \
	| while read host
    do
	echo "$host max-slots=1"
    done > machinefile
fi

# check how much nodes I have been given (may be less than what I
# asked)
MAXW=$(cat machinefile | wc -l)

# launch helena and kill it after MAX seconds if the search does not
# progress (happens sometimes because shmem_init does not terminate)
launchHelena () {
    cmd=$*
    echo $cmd
    tmp=$(mktemp)
    eval $cmd > $tmp &
    pid=$!
    MAX=15
    n=1
    while [ $n -lt $MAX ]
    do
	l=$(grep 'States stored   :          0' $tmp | wc -l)
	if [ $l -gt 10 ]
	then
	    break
	else
	    sleep 1
	    n=$((n + 1))
	fi
    done
    if [ $n -ge $MAX ]
    then
	echo "***** wait for $pid *****"
	wait $pid
	cat $tmp
    else
	echo "***** kill $pid *****"
	kill $pid
    fi
}

mkdir -p $outDir &> /dev/null

reports=$(ls -1 $outDir | wc -l)
scripts/select-models $minStates $maxStates \
    | while read m lang st opt
      do
	  printed=0
	  f=$(scripts/get-file $m $lang)
	  [ ! -f $f ] && continue
	  param=$(scripts/format-parameters $opt)
	  for N in $(seq 1 $MAXW)
	  do
              hashSize=20
	      size=900000
	      while [ $((size * N)) -lt $st -a $hashSize != 29 ]
	      do
		  hashSize=$((hashSize + 1))
		  size=$((size * 2))
	      done
	      xml=$outDir/$m
	      if [ "$opt" != "" ]
	      then
		  xml=$xml-$(echo $opt | tr " " "-")
	      fi
	      xml=$xml"_N"$N.xml
	      if [ ! -f $xml -a ! $hashSize -eq 29 ]
	      then
		  cmd=$helena" --hash-size=$hashSize "$param
		  if [ $N -gt 1 ]
		  then
		      head -$N machinefile > mf
		      cmd=$cmd" --algo=dbfs --machine-file=mf"
		  else
		      cmd=$cmd" --algo=bfs"
		  fi
		  cmd=$cmd" --progress=no-report --report-file="$xml" $f"
		  if [ $printed -eq 0 ]
		  then
		      printed=1
		      echo '***** '$m - $st states' *****'
		  fi
		  launchHelena $cmd
	      fi
	  done
      done

if [ $reports != $(ls -1 $outDir | wc -l) ]
then
    scripts/dbfs $MAXW $minStates $maxStates $btl
fi
