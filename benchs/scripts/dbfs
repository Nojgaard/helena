#!/bin/bash

N=$1
HS=$2

T=28
H=268435456

# some checks
[ -z "$N" ] && echo "missing \$1 = # of nodes" && exit 1
[ -z "$HS" ] && echo "missing \$2 = shmem heap size" && exit 1
[ -z "$OAR_NODEFILE" ] && echo 'not in an OAR job' && exit 1

helena="helena --algo=dbfs --machine-file=machinefile -hs=$HS -C"
outDir=out/dbfs-$HS
mkdir -p $outDir &> /dev/null

models='elevator.5;dve;185008051;22
lifts.9;dve;266445936;22
firewire_link.3;dve;425333983;22
leader_filters.8;dve;431401020;22
collision.5;dve;431965993;22
iprotocol.8;dve;447570146;22
anderson.8;dve;538699029;22
telephony.8;dve;1051746064;24
public_subscribe.5;dve;1153014089;22
lamport.9;dve;1436848880;22
brp.8;dve;1526547707;22
synapse.9;dve;1675298471;22
szymanski.6;dve;6779809484;22'

for N in $(seq $N -2 2)
do
    for P in 8 4 2 1
    do
	cat $OAR_NODEFILE | sort -u | head -$N | \
	    while read host
	    do
		echo "$host max-slots=$P"
	    done > machinefile
	MAX=$(cat machinefile | wc -l)
	[ $MAX -lt $N ] && echo "not enough machines" && exit 1
	for l in $models
	do
	    m=$(echo $l | cut -f1 -d';')
	    lang=$(echo $l | cut -f2 -d';')
	    st=$(echo $l | cut -f3 -d';')
	    cb=$(echo $l | cut -f4 -d';')
	    f=$(scripts/get-file $m $lang)
	    [ ! -f $f ] && continue
	    param=$(scripts/format-parameters $opt)
	    [ $st -gt $((N * H * 50 / 100)) ] && continue
	    p=$P
	    t=$T
	    while [ $p != 1 ]
	    do
		p=$((p / 2))
		t=$((t - 1))
	    done
	    xml=$outDir/$m
	    if [ "$opt" != "" ]
	    then
		xml=$xml-$(echo $opt | tr " " "-")
	    fi
	    xml=$xml"_N"$N"_P"$P".xml"
	    [ -f $xml ] && continue
	    cmd=$helena" -t=$t -cb=$cb "$param
	    cmd=$cmd" --progress=no-report --report-file="$xml" $f"
	    echo '***** '$m - $st states' *****'
	    echo $cmd
	    eval $cmd
	done
    done
done
exit 0
