#!/bin/bash

MAX=$1

outDir=out/dbfs

[ "$MAX"  = "" ] && echo "missing \$1 = MAX # of nodes" && exit 1
[ ! -d $outDir ] && echo "$outDir does not exist" && exit 1

for P in 1 2 4 8
do
    echo -n "set terminal png size 600, 600;
set output \"accel-dbfs-$P.png\";
set title \"Acceleration de DBFS ($P proc. / noeuds)\"
set xtics 1;
set xrange [1:$MAX];
set yrange [0.75:$MAX];
set key outside vertical center bottom font \",8\" box;
set lmargin 4;
plot x with lines linestyle 1 lw 2 lc rgb '#000000' title \"optimal\"" > plot
    for i in $(seq 1 $MAX)
    do
	echo -n ", $i title '' with dots lc rgb '#000000'" >> plot
    done
    lp=1
    ls -1 $outDir/*xml | \
	awk -F'_N' '{print $1}' | \
	awk -F'/' '{print $NF}' | \
	sort -u | \
	while read m
	do
            echo $m, $P
            dat=$outDir/$m.dat
            echo -n > $dat
            first=1
            for N in $(seq 1 $MAX)
            do
		f=$outDir/$m"_N"$N"_P"$P".xml"
		[ ! -f "$f" ] && continue
		lastN=$N
		l=$(scripts/get-stat $f searchTime)
		resTime=$(scripts/list-op min $l)
		l=$(scripts/get-stat $f statesStored)
		st=$(scripts/list-op sum $l)
		l=$(scripts/get-stat $f arcs)
		tr=$(scripts/list-op sum $l)
		if [ $first = 1 ]
		then
                    first=0
                    ref=$N
                    refSt=$st
                    refTime=$resTime
                    echo $N $N >> $dat
		else
                    if [ $refSt != $st ]
		    then
			echo erreur N=$N, ref=$refSt, st=$st
		    fi
                    echo $N $(echo "scale=2;$ref*$refTime/$resTime" | bc) \
			 >> $dat
		fi
            done
            m=$(echo $m | sed 's/_/-/g')
	    S=$(echo "scale = 2 ; $st/100000000" | bc)
	    T=$(echo "scale = 2 ; $tr/100000000" | bc)
	    t="$m (${S}E8 states, ${T}E8 transitions, T_{$lastN} = $resTime s.)"
            echo -n ", \"$dat\" title \"$t\" with lp ls "$lp >> plot
            lp=$((lp + 1))
	done
    echo ";" >> plot
    cat plot | gnuplot
    rm plot
done
