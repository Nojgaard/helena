#! /bin/bash

# $1 = numero de version pour la release

TMP_DIR=/tmp
RELEASE_DIR=~/public_html/helena/releases/
HELENA_SUBDIRS="bin doc examples src xml"
EXEC="
helena
helena-generate-config
helena-graph
helena-report"

#  tests preliminaires
if [ $# -ne 1 ]
then
    echo "il faut le numero de version"
    exit -1
fi
if [ -d $RELEASE_DIR/$1 ]
then
    echo "la version existe deja"
    exit -1
fi

#  copie helena dans le repertoire temporaire
echo "Copie le repertoire helena"
rm -rf $TMP_DIR/helena &> /dev/null
cd ..
tar czf $TMP_DIR/helena.tgz helena
cd $TMP_DIR
tar xzf helena.tgz

#  supprimer les fichiers ~ crees par emacs et les repertoires svn
cd $TMP_DIR
for emacs in $(find . -name \*~)
do
    rm -rf $emacs
done
for svn in $(find . -name .svn)
do
    rm -rf $svn
done


#  supprime les repertoires qui ne doivent pas apparaitre dans la
#  distribution
cd $TMP_DIR/helena
for i in *
do
    if [ -d $i ]
    then
	if [ -z "$(echo $HELENA_SUBDIRS | grep $i)" ]
	then
	    rm -rf $TMP_DIR/helena/$i
	fi
    fi
done


#  on ne garde que les fichiers pdf dans le repertoire docs
cd $TMP_DIR/helena/doc
echo "Compile la doc"
make -s all &> /dev/null
make -s all &> /dev/null
mv helena*.pdf ..
rm -rf *
mv ../*.pdf .


#  compile les sources
cd $TMP_DIR/helena/src
echo "Compile les sources"
./compile-helena --clean-all &> /dev/null
export PATH=~/tools/gnat/bin:$PATH
./compile-helena --with-all #&> /dev/null
./compile-helena --clean &> /dev/null

#  cree deux archives : avec les binaires et sans
cd $TMP_DIR
echo "Cree les archives"
tar czf helena-$1-linux-x86.tgz helena
for e in $EXEC
do
    mv helena/bin/$e helena/
done
rm -rf helena/bin/*
for e in $EXEC
do
    mv helena/$e helena/bin/
done
tar czf helena-$1-linux.tgz helena

#  copie les archives dans le repertoire des releases
cd $RELEASE_DIR
mkdir $1
cd $1
mv $TMP_DIR/helena-$1-*.tgz .

#  supprime le repertoire temporaire d'helena
rm -rf $TMP_DIR/helena*
